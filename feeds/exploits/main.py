# python imports
import os
import logging
from io import BytesIO
from datetime import datetime
from urllib.request import urlopen
from distutils.util import strtobool

# third-party imports
import pandas as pd
import cve_searchsploit as CS

# project imports
from commons.file import save_dict_to_csv

# local imports
from .constants import BASE_URL
from .constants import OUTPUT_FILE_PATH


log = logging.getLogger(__name__)


def _download_exploits(update_db):

    # update exploitdb database
    if update_db:
        CS.update_db()

    try:
        with urlopen(BASE_URL) as resp:
            exploits = pd.read_csv(BytesIO(resp.read()))
    except Exception as e:
        log.error(f'\tCould not download the file: {e}')

    results = dict()

    for row in exploits.itertuples():
        cves = CS.cve_from_edbid(int(row.id))

        for cveID in cves:

            exploit = {
                'cve_id': cveID,
                'exploit_name': row.description,
                'exploit_published_date': row.date_published,
                'exploit_type': row.type,
                'exploit_platform': row.platform
            }

            if cveID in results.keys():
                entry = results[cveID]

                # saving the date of the newer exploit
                saved_date = datetime.strptime(entry.get('exploit_published_date'), '%Y-%m-%d')
                curr_date = datetime.strptime(row.date_published, '%Y-%m-%d')

                if curr_date > saved_date:
                    entry.update(({**exploit}))

                entry['exploit_count'] += 1
            else:
                results.setdefault(cveID, {
                    **exploit,
                    'exploit_count': 1,
                })

    header = ['cve_id', 'exploit_name', 'exploit_published_date',
              'exploit_type', 'exploit_platform', 'exploit_count']
    save_dict_to_csv(OUTPUT_FILE_PATH, header, results)


def download_exploits():

    update_db = strtobool(os.environ.get('UPDATE_EXPLOIT_DB', 'false'))
    _download_exploits(update_db)
